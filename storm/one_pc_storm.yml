version: '3.8'

services:
  zoo1:
    image: zookeeper
    container_name: d-zookeeper1
    restart: always
    hostname: zoo1
    ports:
      - 2181:2181
      - 2888:2888
      - 3888:3888
    volumes:
      - /data/container/zoo/zoo1/data:/data
      - /data/container/zoo/zoo1/datalog:/datalog
    environment:
      TZ: Asia/Shanghai
      ZOO_MY_ID: 1 
      ZOO_SERVERS: server.1=0.0.0.0:2888:3888;2181 server.2=zoo2:12888:13888;2182 server.3=zoo3:22888:23888;2183 # zookeeper节点列表

  zoo2:
    image: zookeeper
    container_name: d-zookeeper2
    restart: always
    hostname: zoo2
    ports:
      - 2182:2182
      - 12888:12888
      - 13888:13888
    volumes:
      - /data/container/zoo/zoo2/data:/data
      - /data/container/zoo/zoo2/datalog:/datalog
    environment:
      TZ: Asia/Shanghai
      ZOO_MY_ID: 2
      ZOO_SERVERS: server.1=zoo1:2888:3888;2181 server.2=0.0.0.0:12888:13888;2182 server.3=zoo3:22888:23888;2183

  zoo3:
    image: zookeeper
    container_name: d-zookeeper3
    restart: always
    hostname: zoo3
    ports:
      - 2183:2183
      - 22888:22888
      - 23888:23888
    volumes:
      - /data/container/zoo/zoo3/data:/data
      - /data/container/zoo/zoo3/datalog:/datalog
    environment:
      TZ: Asia/Shanghai
      ZOO_MY_ID: 3
      ZOO_SERVERS: server.1=zoo1:2888:3888;2181 server.2=zoo2:12888:13888;2182 server.3=0.0.0.0:22888:23888;2183

  nimbus:
    image: storm # 镜像
    container_name: d-nimbus # 容器名称
    hostname: nimbus # host名字
    command: storm nimbus # 覆盖容器启动后默认执行的命令
    depends_on: # 依赖于zoo1，服务会等依赖的服务启动后再启动
      - zoo1
    restart: always # 总是重启
    ports: # 端口映射
      - 6627:6627
    environment: # 环境变量
      TZ: Asia/Shanghai
    volumes: # 挂载目录
      - /data/container/storm/nimbus/data:/data
      - /data/container/storm/nimbus/logs:/logs
    extra_hosts:  # 添加host配置，storm.yaml中zookeeper，storm使用2181端口，所以只配置一个zookeeper
      - zookeeper:192.168.0.1

  supervisor1:
    image: storm # 镜像
    container_name: d-supervisor1 # 容器名称
    hostname: supervisor1 # host名字
    command: storm supervisor # 覆盖容器启动后默认执行的命令
    depends_on: # 依赖于nimbus、zoo1，服务会等依赖的服务启动后再启动
      - nimbus
      - zoo1
    restart: always # 总是重启
    environment: # 环境变量
      TZ: Asia/Shanghai
    volumes: # 挂载目录
      - /data/container/storm/supervisor1/data:/data
      - /data/container/storm/supervisor1/logs:/logs
    extra_hosts: # 添加host配置，storm.yaml中nimbus、zookeeper
      - nimbus:192.168.0.1
      - zookeeper:192.168.0.1
  
  supervisor2:
    image: storm # 镜像
    container_name: d-supervisor2 # 容器名称
    hostname: supervisor2 # host名字
    command: storm supervisor # 覆盖容器启动后默认执行的命令
    depends_on: # 依赖于nimbus、zoo1，服务会等依赖的服务启动后再启动
      - nimbus
      - zoo1
    restart: always # 总是重启
    environment: # 环境变量
      TZ: Asia/Shanghai
    volumes: # 挂载目录
      - /data/container/storm/supervisor2/data:/data
      - /data/container/storm/supervisor2/logs:/logs
    extra_hosts: # 添加host配置，storm.yaml中nimbus、zookeeper
      - nimbus:192.168.0.1
      - zookeeper:192.168.0.1

  ui:
    image: storm # 镜像
    container_name: d-ui # 容器名称
    hostname: host_ui # host名字
    command: storm ui # 覆盖容器启动后默认执行的命令
    depends_on: # 依赖于nimbus，服务会等依赖的服务启动后再启动
      - nimbus
    restart: always # 总是重启
    ports: # 端口映射
      - 8181:8080
    environment: # 环境变量
      TZ: Asia/Shanghai
    volumes: # 挂载目录
      - /data/container/storm/ui/data:/data
      - /data/container/storm/ui/logs:/logs
    extra_hosts: # 添加host配置，storm.yaml中nimbus、zookeeper
      - nimbus:192.168.0.1
      - zookeeper:192.168.0.1

networks:
  default:
    name: d-network